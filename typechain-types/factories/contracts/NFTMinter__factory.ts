/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { NFTMinter, NFTMinterInterface } from "../../contracts/NFTMinter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_factoryContract",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
    ],
    name: "BatchMetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldFactory",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newFactory",
        type: "address",
      },
    ],
    name: "FactoryContractUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "MetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "collectionId",
        type: "uint256",
      },
    ],
    name: "NFTMinted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "MINT_PRICE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "collectionId",
        type: "uint256",
      },
      {
        internalType: "string[]",
        name: "tokenURIs",
        type: "string[]",
      },
    ],
    name: "batchMintToCollection",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "factoryContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "collectionId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
    ],
    name: "mintToCollection",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newFactory",
        type: "address",
      },
    ],
    name: "updateFactoryContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001fca38038062001fca83398101604081905262000034916200014d565b336040518060400160405280600b81526020016a10525c9d1a5cdd0813919560aa1b81525060405180604001604052806005815260200164105253919560da1b815250816000908162000088919062000224565b50600162000097828262000224565b5050506001600160a01b038116620000c957604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000d481620000fb565b50600980546001600160a01b0319166001600160a01b0392909216919091179055620002f0565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000602082840312156200016057600080fd5b81516001600160a01b03811681146200017857600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620001aa57607f821691505b602082108103620001cb57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021f57600081815260208120601f850160051c81016020861015620001fa5750805b601f850160051c820191505b818110156200021b5782815560010162000206565b5050505b505050565b81516001600160401b038111156200024057620002406200017f565b620002588162000251845462000195565b84620001d1565b602080601f831160018114620002905760008415620002775750858301515b600019600386901b1c1916600185901b1785556200021b565b600085815260208120601f198616915b82811015620002c157888601518255948401946001909101908401620002a0565b5085821015620002e05787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611cca80620003006000396000f3fe60806040526004361061014b5760003560e01c8063715018a6116100b6578063c002d23d1161006f578063c002d23d14610376578063c2fb538e14610391578063c87b56dd146103b1578063de11c94a146103d1578063e985e9c5146103f1578063f2fde38b1461041157600080fd5b8063715018a6146102db5780638da5cb5b146102f057806395d89b411461030e5780639a525b4b14610323578063a22cb46514610336578063b88d4fde1461035657600080fd5b80633ccfd60b116101085780633ccfd60b1461023e57806342842e0e1461025357806343e79cc01461027357806356189236146102865780636352211e1461029b57806370a08231146102bb57600080fd5b806301ffc9a71461015057806306fdde0314610185578063081812fc146101a7578063095ea7b3146101df57806312065fe01461020157806323b872dd1461021e575b600080fd5b34801561015c57600080fd5b5061017061016b366004611637565b610431565b60405190151581526020015b60405180910390f35b34801561019157600080fd5b5061019a610442565b60405161017c91906116a4565b3480156101b357600080fd5b506101c76101c23660046116b7565b6104d4565b6040516001600160a01b03909116815260200161017c565b3480156101eb57600080fd5b506101ff6101fa3660046116ec565b6104fd565b005b34801561020d57600080fd5b50475b60405190815260200161017c565b34801561022a57600080fd5b506101ff610239366004611716565b61050c565b34801561024a57600080fd5b506101ff61059c565b34801561025f57600080fd5b506101ff61026e366004611716565b610691565b6101ff610281366004611811565b6106b1565b34801561029257600080fd5b50600854610210565b3480156102a757600080fd5b506101c76102b63660046116b7565b610817565b3480156102c757600080fd5b506102106102d6366004611868565b610822565b3480156102e757600080fd5b506101ff61086a565b3480156102fc57600080fd5b506007546001600160a01b03166101c7565b34801561031a57600080fd5b5061019a61087e565b6101ff610331366004611883565b61088d565b34801561034257600080fd5b506101ff610351366004611962565b610b35565b34801561036257600080fd5b506101ff61037136600461199e565b610b40565b34801561038257600080fd5b5061021066038d7ea4c6800081565b34801561039d57600080fd5b506101ff6103ac366004611868565b610b58565b3480156103bd57600080fd5b5061019a6103cc3660046116b7565b610c08565b3480156103dd57600080fd5b506009546101c7906001600160a01b031681565b3480156103fd57600080fd5b5061017061040c366004611a1a565b610c13565b34801561041d57600080fd5b506101ff61042c366004611868565b610c41565b600061043c82610c7f565b92915050565b60606000805461045190611a4d565b80601f016020809104026020016040519081016040528092919081815260200182805461047d90611a4d565b80156104ca5780601f1061049f576101008083540402835291602001916104ca565b820191906000526020600020905b8154815290600101906020018083116104ad57829003601f168201915b5050505050905090565b60006104df82610ca4565b506000828152600460205260409020546001600160a01b031661043c565b610508828233610cdd565b5050565b6001600160a01b03821661053b57604051633250574960e11b8152600060048201526024015b60405180910390fd5b6000610548838333610cea565b9050836001600160a01b0316816001600160a01b031614610596576040516364283d7b60e01b81526001600160a01b0380861660048301526024820184905282166044820152606401610532565b50505050565b6105a4610de3565b47806105e95760405162461bcd60e51b81526020600482015260146024820152734e6f2066756e647320746f20776974686472617760601b6044820152606401610532565b60006105fd6007546001600160a01b031690565b6001600160a01b03168260405160006040518083038185875af1925050503d8060008114610647576040519150601f19603f3d011682016040523d82523d6000602084013e61064c565b606091505b50509050806105085760405162461bcd60e51b815260206004820152601160248201527015da5d1a191c985dd85b0819985a5b1959607a1b6044820152606401610532565b6106ac83838360405180602001604052806000815250610b40565b505050565b66038d7ea4c680003410156106ff5760405162461bcd60e51b8152602060048201526014602482015273125b9cdd59999a58da595b9d081c185e5b595b9d60621b6044820152606401610532565b6001600160a01b0383166107555760405162461bcd60e51b815260206004820152601b60248201527f43616e6e6f74206d696e7420746f207a65726f206164647265737300000000006044820152606401610532565b60008151116107a25760405162461bcd60e51b8152602060048201526019602482015278546f6b656e205552492063616e6e6f7420626520656d70747960381b6044820152606401610532565b6008805490819060006107b483611a9d565b91905055506107c38482610e10565b6107cd8183610e2a565b80846001600160a01b03167f7f9dd5d8fa69e733db2277a568b65a9651a3042da18fb2b5ea1966d3891cbfda8486604051610809929190611ab6565b60405180910390a350505050565b600061043c82610ca4565b60006001600160a01b03821661084e576040516322718ad960e21b815260006004820152602401610532565b506001600160a01b031660009081526003602052604090205490565b610872610de3565b61087c6000610e7a565b565b60606001805461045190611a4d565b80516108a09066038d7ea4c68000611ad8565b3410156108fb5760405162461bcd60e51b815260206004820152602360248201527f496e73756666696369656e74207061796d656e7420666f72206261746368206d6044820152621a5b9d60ea1b6064820152608401610532565b6001600160a01b0383166109515760405162461bcd60e51b815260206004820152601b60248201527f43616e6e6f74206d696e7420746f207a65726f206164647265737300000000006044820152606401610532565b60008151116109ae5760405162461bcd60e51b815260206004820152602360248201527f4d7573742070726f76696465206174206c65617374206f6e6520746f6b656e2060448201526255524960e81b6064820152608401610532565b606481511115610a0f5760405162461bcd60e51b815260206004820152602660248201527f43616e6e6f74206d696e74206d6f7265207468616e20313030204e465473206160448201526574206f6e636560d01b6064820152608401610532565b60005b8151811015610596576000828281518110610a2f57610a2f611aef565b60200260200101515111610a815760405162461bcd60e51b8152602060048201526019602482015278546f6b656e205552492063616e6e6f7420626520656d70747960381b6044820152606401610532565b600880549081906000610a9383611a9d565b9190505550610aa28582610e10565b610ac581848481518110610ab857610ab8611aef565b6020026020010151610e2a565b80856001600160a01b03167f7f9dd5d8fa69e733db2277a568b65a9651a3042da18fb2b5ea1966d3891cbfda858581518110610b0357610b03611aef565b602002602001015187604051610b1a929190611ab6565b60405180910390a35080610b2d81611a9d565b915050610a12565b610508338383610ecc565b610b4b84848461050c565b6105963385858585610f6b565b610b60610de3565b6001600160a01b038116610bb65760405162461bcd60e51b815260206004820152601e60248201527f466163746f727920616464726573732063616e6e6f74206265207a65726f00006044820152606401610532565b600980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907fbc011fae49b954af8c63aad9da0e474678fc8e2c5f56efa34e41714e4dbb267290600090a35050565b606061043c82611096565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b610c49610de3565b6001600160a01b038116610c7357604051631e4fbdf760e01b815260006004820152602401610532565b610c7c81610e7a565b50565b60006001600160e01b03198216632483248360e11b148061043c575061043c826111a7565b6000818152600260205260408120546001600160a01b03168061043c57604051637e27328960e01b815260048101849052602401610532565b6106ac83838360016111f7565b6000828152600260205260408120546001600160a01b0390811690831615610d1757610d178184866112fd565b6001600160a01b03811615610d5557610d346000856000806111f7565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b03851615610d84576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6007546001600160a01b0316331461087c5760405163118cdaa760e01b8152336004820152602401610532565b610508828260405180602001604052806000815250611361565b6000828152600660205260409020610e428282611b4b565b506040518281527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce79060200160405180910390a15050565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216610efe57604051630b61174360e31b81526001600160a01b0383166004820152602401610532565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b1561108f57604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290610fad908890889087908790600401611c0b565b6020604051808303816000875af1925050508015610fe8575060408051601f3d908101601f19168201909252610fe591810190611c48565b60015b611051573d808015611016576040519150601f19603f3d011682016040523d82523d6000602084013e61101b565b606091505b50805160000361104957604051633250574960e11b81526001600160a01b0385166004820152602401610532565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b1461108d57604051633250574960e11b81526001600160a01b0385166004820152602401610532565b505b5050505050565b60606110a182610ca4565b50600082815260066020526040812080546110bb90611a4d565b80601f01602080910402602001604051908101604052809291908181526020018280546110e790611a4d565b80156111345780601f1061110957610100808354040283529160200191611134565b820191906000526020600020905b81548152906001019060200180831161111757829003601f168201915b50505050509050600061115260408051602081019091526000815290565b90508051600003611164575092915050565b81511561119657808260405160200161117e929190611c65565b60405160208183030381529060405292505050919050565b61119f84611379565b949350505050565b60006001600160e01b031982166380ac58cd60e01b14806111d857506001600160e01b03198216635b5e139f60e01b145b8061043c57506301ffc9a760e01b6001600160e01b031983161461043c565b808061120b57506001600160a01b03821615155b156112cd57600061121b84610ca4565b90506001600160a01b038316158015906112475750826001600160a01b0316816001600160a01b031614155b801561125a57506112588184610c13565b155b156112835760405163a9fbf51f60e01b81526001600160a01b0384166004820152602401610532565b81156112cb5783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b6113088383836113ee565b6106ac576001600160a01b03831661133657604051637e27328960e01b815260048101829052602401610532565b60405163177e802f60e01b81526001600160a01b038316600482015260248101829052604401610532565b61136b8383611451565b6106ac336000858585610f6b565b606061138482610ca4565b50600061139c60408051602081019091526000815290565b905060008151116113bc57604051806020016040528060008152506113e7565b806113c6846114b6565b6040516020016113d7929190611c65565b6040516020818303038152906040525b9392505050565b60006001600160a01b0383161580159061119f5750826001600160a01b0316846001600160a01b0316148061142857506114288484610c13565b8061119f5750506000908152600460205260409020546001600160a01b03908116911614919050565b6001600160a01b03821661147b57604051633250574960e11b815260006004820152602401610532565b600061148983836000610cea565b90506001600160a01b038116156106ac576040516339e3563760e11b815260006004820152602401610532565b606060006114c383611549565b600101905060008167ffffffffffffffff8111156114e3576114e3611752565b6040519080825280601f01601f19166020018201604052801561150d576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461151757509392505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106115885772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106115b4576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106115d257662386f26fc10000830492506010015b6305f5e10083106115ea576305f5e100830492506008015b61271083106115fe57612710830492506004015b60648310611610576064830492506002015b600a831061043c5760010192915050565b6001600160e01b031981168114610c7c57600080fd5b60006020828403121561164957600080fd5b81356113e781611621565b60005b8381101561166f578181015183820152602001611657565b50506000910152565b60008151808452611690816020860160208601611654565b601f01601f19169290920160200192915050565b6020815260006113e76020830184611678565b6000602082840312156116c957600080fd5b5035919050565b80356001600160a01b03811681146116e757600080fd5b919050565b600080604083850312156116ff57600080fd5b611708836116d0565b946020939093013593505050565b60008060006060848603121561172b57600080fd5b611734846116d0565b9250611742602085016116d0565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561179157611791611752565b604052919050565b600067ffffffffffffffff8311156117b3576117b3611752565b6117c6601f8401601f1916602001611768565b90508281528383830111156117da57600080fd5b828260208301376000602084830101529392505050565b600082601f83011261180257600080fd5b6113e783833560208501611799565b60008060006060848603121561182657600080fd5b61182f846116d0565b925060208401359150604084013567ffffffffffffffff81111561185257600080fd5b61185e868287016117f1565b9150509250925092565b60006020828403121561187a57600080fd5b6113e7826116d0565b60008060006060848603121561189857600080fd5b6118a1846116d0565b92506020808501359250604085013567ffffffffffffffff808211156118c657600080fd5b818701915087601f8301126118da57600080fd5b8135818111156118ec576118ec611752565b8060051b6118fb858201611768565b918252838101850191858101908b84111561191557600080fd5b86860192505b83831015611951578235858111156119335760008081fd5b6119418d89838a01016117f1565b835250918601919086019061191b565b809750505050505050509250925092565b6000806040838503121561197557600080fd5b61197e836116d0565b91506020830135801515811461199357600080fd5b809150509250929050565b600080600080608085870312156119b457600080fd5b6119bd856116d0565b93506119cb602086016116d0565b925060408501359150606085013567ffffffffffffffff8111156119ee57600080fd5b8501601f810187136119ff57600080fd5b611a0e87823560208401611799565b91505092959194509250565b60008060408385031215611a2d57600080fd5b611a36836116d0565b9150611a44602084016116d0565b90509250929050565b600181811c90821680611a6157607f821691505b602082108103611a8157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600060018201611aaf57611aaf611a87565b5060010190565b604081526000611ac96040830185611678565b90508260208301529392505050565b808202811582820484141761043c5761043c611a87565b634e487b7160e01b600052603260045260246000fd5b601f8211156106ac57600081815260208120601f850160051c81016020861015611b2c5750805b601f850160051c820191505b8181101561108d57828155600101611b38565b815167ffffffffffffffff811115611b6557611b65611752565b611b7981611b738454611a4d565b84611b05565b602080601f831160018114611bae5760008415611b965750858301515b600019600386901b1c1916600185901b17855561108d565b600085815260208120601f198616915b82811015611bdd57888601518255948401946001909101908401611bbe565b5085821015611bfb5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611c3e90830184611678565b9695505050505050565b600060208284031215611c5a57600080fd5b81516113e781611621565b60008351611c77818460208801611654565b835190830190611c8b818360208801611654565b0194935050505056fea26469706673582212200e1ae101fa7c53712cf7673629d4679ec3173bccc627217a7ca7ba670262faf964736f6c63430008140033";

type NFTMinterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTMinterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTMinter__factory extends ContractFactory {
  constructor(...args: NFTMinterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _factoryContract: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_factoryContract, overrides || {});
  }
  override deploy(
    _factoryContract: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_factoryContract, overrides || {}) as Promise<
      NFTMinter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): NFTMinter__factory {
    return super.connect(runner) as NFTMinter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTMinterInterface {
    return new Interface(_abi) as NFTMinterInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): NFTMinter {
    return new Contract(address, _abi, runner) as unknown as NFTMinter;
  }
}
