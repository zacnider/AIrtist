/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  NFTArtistCollection,
  NFTArtistCollectionInterface,
} from "../../contracts/NFTArtistCollection";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
    ],
    name: "BatchMetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "collectionId",
        type: "uint256",
      },
    ],
    name: "CollectionCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "collectionId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxSupply",
        type: "uint256",
      },
    ],
    name: "CollectionCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "MetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "collectionId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
    ],
    name: "NFTMinted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "MINT_PRICE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "collectionId",
        type: "uint256",
      },
      {
        internalType: "string[]",
        name: "tokenURIs",
        type: "string[]",
      },
    ],
    name: "batchMintToCollection",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "collectionTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "collections",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "createdAt",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "maxSupply",
        type: "uint256",
      },
    ],
    name: "createCollection",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "collectionId",
        type: "uint256",
      },
    ],
    name: "getCollection",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
        ],
        internalType: "struct NFTArtistCollection.Collection",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "collectionId",
        type: "uint256",
      },
    ],
    name: "getCollectionTokens",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getTokenCollection",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalCollections",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "collectionId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_tokenURI",
        type: "string",
      },
    ],
    name: "mintToCollection",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "collectionId",
        type: "uint256",
      },
    ],
    name: "pauseCollection",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "collectionId",
        type: "uint256",
      },
    ],
    name: "resumeCollection",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenToCollection",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50336040518060400160405280601581526020017f4e46542041727469737420436f6c6c656374696f6e00000000000000000000008152506040518060400160405280600681526020016513919510549560d21b8152508160009081620000799190620001c8565b506001620000888282620001c8565b5050506001600160a01b038116620000ba57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000c581620000d1565b50600160085562000294565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200014e57607f821691505b6020821081036200016f57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001c357600081815260208120601f850160051c810160208610156200019e5750805b601f850160051c820191505b81811015620001bf57828155600101620001aa565b5050505b505050565b81516001600160401b03811115620001e457620001e462000123565b620001fc81620001f5845462000139565b8462000175565b602080601f8311600181146200023457600084156200021b5750858301515b600019600386901b1c1916600185901b178555620001bf565b600085815260208120601f198616915b82811015620002655788860151825594840194600190910190840162000244565b5085821015620002845787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61280580620002a46000396000f3fe6080604052600436106101d85760003560e01c8063734edac911610102578063c002d23d11610095578063e9df613c11610064578063e9df613c14610556578063f08b82e614610583578063f2fde38b14610598578063fdbda0ec146105b857600080fd5b8063c002d23d146104db578063c87b56dd146104f6578063d93683a214610516578063e985e9c51461053657600080fd5b806395d89b41116100d157806395d89b41146104735780639a525b4b14610488578063a22cb4651461049b578063b88d4fde146104bb57600080fd5b8063734edac9146104005780638c39cb20146104205780638da5cb5b14610440578063939bf6dd1461045e57600080fd5b80633ccfd60b1161017a5780635a1f3c28116101495780635a1f3c281461037e5780636352211e146103ab57806370a08231146103cb578063715018a6146103eb57600080fd5b80633ccfd60b146103165780634197ed741461032b57806342842e0e1461034b57806343e79cc01461036b57600080fd5b8063095ea7b3116101b6578063095ea7b31461026c578063195f78ae1461028e57806323b872dd146102c95780632bb88056146102e957600080fd5b806301ffc9a7146101dd57806306fdde0314610212578063081812fc14610234575b600080fd5b3480156101e957600080fd5b506101fd6101f8366004611f9b565b6105eb565b60405190151581526020015b60405180910390f35b34801561021e57600080fd5b506102276105fc565b6040516102099190612008565b34801561024057600080fd5b5061025461024f36600461201b565b61068e565b6040516001600160a01b039091168152602001610209565b34801561027857600080fd5b5061028c610287366004612050565b6106b7565b005b34801561029a57600080fd5b506102bb6102a936600461201b565b600b6020526000908152604090205481565b604051908152602001610209565b3480156102d557600080fd5b5061028c6102e436600461207a565b6106c6565b3480156102f557600080fd5b5061030961030436600461201b565b610756565b60405161020991906120b6565b34801561032257600080fd5b5061028c6107b8565b34801561033757600080fd5b506102bb6103463660046121b9565b61083f565b34801561035757600080fd5b5061028c61036636600461207a565b6109fd565b61028c610379366004612226565b610a1d565b34801561038a57600080fd5b5061039e61039936600461201b565b610ce9565b604051610209919061227d565b3480156103b757600080fd5b506102546103c636600461201b565b610eb7565b3480156103d757600080fd5b506102bb6103e6366004612300565b610ec2565b3480156103f757600080fd5b5061028c610f0a565b34801561040c57600080fd5b5061028c61041b36600461201b565b610f1e565b34801561042c57600080fd5b506102bb61043b36600461231b565b610f41565b34801561044c57600080fd5b506007546001600160a01b0316610254565b34801561046a57600080fd5b50600d546102bb565b34801561047f57600080fd5b50610227610f72565b61028c61049636600461233d565b610f81565b3480156104a757600080fd5b5061028c6104b636600461241c565b61133b565b3480156104c757600080fd5b5061028c6104d6366004612458565b611346565b3480156104e757600080fd5b506102bb66038d7ea4c6800081565b34801561050257600080fd5b5061022761051136600461201b565b61135e565b34801561052257600080fd5b5061028c61053136600461201b565b611369565b34801561054257600080fd5b506101fd6105513660046124d4565b6113f5565b34801561056257600080fd5b506102bb61057136600461201b565b6000908152600b602052604090205490565b34801561058f57600080fd5b506009546102bb565b3480156105a457600080fd5b5061028c6105b3366004612300565b611423565b3480156105c457600080fd5b506105d86105d336600461201b565b611461565b6040516102099796959493929190612507565b60006105f6826115b9565b92915050565b60606000805461060b90612562565b80601f016020809104026020016040519081016040528092919081815260200182805461063790612562565b80156106845780601f1061065957610100808354040283529160200191610684565b820191906000526020600020905b81548152906001019060200180831161066757829003601f168201915b5050505050905090565b6000610699826115de565b506000828152600460205260409020546001600160a01b03166105f6565b6106c2828233611617565b5050565b6001600160a01b0382166106f557604051633250574960e11b8152600060048201526024015b60405180910390fd5b6000610702838333611624565b9050836001600160a01b0316816001600160a01b031614610750576040516364283d7b60e01b81526001600160a01b03808616600483015260248201849052821660448201526064016106ec565b50505050565b6000818152600c60209081526040918290208054835181840281018401909452808452606093928301828280156107ac57602002820191906000526020600020905b815481526020019060010190808311610798575b50505050509050919050565b6107c061171d565b47806108055760405162461bcd60e51b81526020600482015260146024820152734e6f2066756e647320746f20776974686472617760601b60448201526064016106ec565b6007546040516001600160a01b039091169082156108fc029083906000818181858888f193505050501580156106c2573d6000803e3d6000fd5b6000808211801561085257506127108211155b6108935760405162461bcd60e51b8152602060048201526012602482015271496e76616c6964206d617820737570706c7960701b60448201526064016106ec565b60008451116108db5760405162461bcd60e51b81526020600482015260146024820152734e616d652063616e6e6f7420626520656d70747960601b60448201526064016106ec565b600d80549060006108eb836125b2565b9091555050600d546040805160e08101825286815260208082018790523382840152600060608301819052608083018790524260a0840152600160c0840152848152600a90915291909120815181906109449082612611565b50602082015160018201906109599082612611565b506040828101516002830180546001600160a01b0319166001600160a01b03909216919091179055606083015160038301556080830151600483015560a0830151600583015560c0909201516006909101805460ff191691151591909117905551339082907fcbc5b9322598689b615122c4e8865dcf948b43e47a66c57f567c94bfb4641425906109ed90899088906126d1565b60405180910390a3949350505050565b610a1883838360405180602001604052806000815250611346565b505050565b610a2561174a565b66038d7ea4c68000341015610a735760405162461bcd60e51b8152602060048201526014602482015273125b9cdd59999a58da595b9d081c185e5b595b9d60621b60448201526064016106ec565b6000828152600a602052604090206006015460ff16610acc5760405162461bcd60e51b8152602060048201526015602482015274436f6c6c656374696f6e206e6f742061637469766560581b60448201526064016106ec565b6000828152600a60205260409020600481015460039091015410610b275760405162461bcd60e51b815260206004820152601260248201527110dbdb1b1958dd1a5bdb881a5cc8199d5b1b60721b60448201526064016106ec565b6000815111610b745760405162461bcd60e51b8152602060048201526019602482015278546f6b656e205552492063616e6e6f7420626520656d70747960381b60448201526064016106ec565b60098054906000610b84836125b2565b9091555050600954610b968482611774565b610ba0818361178e565b6000818152600b60209081526040808320869055858352600c8252808320805460018101825590845282842001849055858352600a9091528120600301805491610be9836125b2565b9190505550836001600160a01b031683827f894881ae3bd36d98281013ef1fe95333ce447d415f933feceedd695d9175e63785604051610c299190612008565b60405180910390a46000838152600a60205260409020600481015460039091015410610c90576000838152600a6020526040808220600601805460ff191690555184917f07316b39b8c420c7e2db22023e90ea579f0e9b4a5c605b0b0a27c284e45c685691a25b66038d7ea4c68000341115610cde57336108fc610cb466038d7ea4c68000346126f3565b6040518115909202916000818181858888f19350505050158015610cdc573d6000803e3d6000fd5b505b50610a186001600855565b610d346040518060e00160405280606081526020016060815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000151581525090565b6000828152600a602052604090819020815160e08101909252805482908290610d5c90612562565b80601f0160208091040260200160405190810160405280929190818152602001828054610d8890612562565b8015610dd55780601f10610daa57610100808354040283529160200191610dd5565b820191906000526020600020905b815481529060010190602001808311610db857829003601f168201915b50505050508152602001600182018054610dee90612562565b80601f0160208091040260200160405190810160405280929190818152602001828054610e1a90612562565b8015610e675780601f10610e3c57610100808354040283529160200191610e67565b820191906000526020600020905b815481529060010190602001808311610e4a57829003601f168201915b505050918352505060028201546001600160a01b0316602082015260038201546040820152600482015460608201526005820154608082015260069091015460ff16151560a09091015292915050565b60006105f6826115de565b60006001600160a01b038216610eee576040516322718ad960e21b8152600060048201526024016106ec565b506001600160a01b031660009081526003602052604090205490565b610f1261171d565b610f1c60006117de565b565b610f2661171d565b6000908152600a60205260409020600601805460ff19169055565b600c6020528160005260406000208181548110610f5d57600080fd5b90600052602060002001600091509150505481565b60606001805461060b90612562565b610f8961174a565b80518015801590610f9b575060328111155b610fda5760405162461bcd60e51b815260206004820152601060248201526f496e76616c6964207175616e7469747960801b60448201526064016106ec565b610feb8166038d7ea4c68000612706565b3410156110315760405162461bcd60e51b8152602060048201526014602482015273125b9cdd59999a58da595b9d081c185e5b595b9d60621b60448201526064016106ec565b6000838152600a602052604090206006015460ff1661108a5760405162461bcd60e51b8152602060048201526015602482015274436f6c6c656374696f6e206e6f742061637469766560581b60448201526064016106ec565b6000838152600a6020526040902060048101546003909101546110ae90839061271d565b11156110fc5760405162461bcd60e51b815260206004820152601d60248201527f4578636565647320636f6c6c656374696f6e206d617820737570706c7900000060448201526064016106ec565b60005b8181101561125557600083828151811061111b5761111b612730565b6020026020010151511161116d5760405162461bcd60e51b8152602060048201526019602482015278546f6b656e205552492063616e6e6f7420626520656d70747960381b60448201526064016106ec565b6009805490600061117d836125b2565b909155505060095461118f8682611774565b6111b2818584815181106111a5576111a5612730565b602002602001015161178e565b6000818152600b60209081526040808320889055878352600c82528220805460018101825590835291200181905583516001600160a01b03871690869083907f894881ae3bd36d98281013ef1fe95333ce447d415f933feceedd695d9175e6379088908790811061122557611225612730565b602002602001015160405161123a9190612008565b60405180910390a4508061124d816125b2565b9150506110ff565b506000838152600a60205260408120600301805483929061127790849061271d565b90915550506000838152600a602052604090206004810154600390910154106112db576000838152600a6020526040808220600601805460ff191690555184917f07316b39b8c420c7e2db22023e90ea579f0e9b4a5c605b0b0a27c284e45c685691a25b60006112ee8266038d7ea4c68000612706565b905080341115610cdc57336108fc61130683346126f3565b6040518115909202916000818181858888f1935050505015801561132e573d6000803e3d6000fd5b505050610a186001600855565b6106c2338383611830565b6113518484846106c6565b61075033858585856118cf565b60606105f6826119fa565b61137161171d565b6000818152600a602052604090206004810154600390910154106113d75760405162461bcd60e51b815260206004820152601e60248201527f436f6c6c656374696f6e20697320616c726561647920636f6d706c657465000060448201526064016106ec565b6000908152600a60205260409020600601805460ff19166001179055565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b61142b61171d565b6001600160a01b03811661145557604051631e4fbdf760e01b8152600060048201526024016106ec565b61145e816117de565b50565b600a6020526000908152604090208054819061147c90612562565b80601f01602080910402602001604051908101604052809291908181526020018280546114a890612562565b80156114f55780601f106114ca576101008083540402835291602001916114f5565b820191906000526020600020905b8154815290600101906020018083116114d857829003601f168201915b50505050509080600101805461150a90612562565b80601f016020809104026020016040519081016040528092919081815260200182805461153690612562565b80156115835780601f1061155857610100808354040283529160200191611583565b820191906000526020600020905b81548152906001019060200180831161156657829003601f168201915b505050600284015460038501546004860154600587015460069097015495966001600160a01b0390931695919450925060ff1687565b60006001600160e01b03198216632483248360e11b14806105f657506105f682611b0b565b6000818152600260205260408120546001600160a01b0316806105f657604051637e27328960e01b8152600481018490526024016106ec565b610a188383836001611b5b565b6000828152600260205260408120546001600160a01b039081169083161561165157611651818486611c61565b6001600160a01b0381161561168f5761166e600085600080611b5b565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b038516156116be576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6007546001600160a01b03163314610f1c5760405163118cdaa760e01b81523360048201526024016106ec565b60026008540361176d57604051633ee5aeb560e01b815260040160405180910390fd5b6002600855565b6106c2828260405180602001604052806000815250611cc5565b60008281526006602052604090206117a68282612611565b506040518281527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce79060200160405180910390a15050565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03821661186257604051630b61174360e31b81526001600160a01b03831660048201526024016106ec565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b156119f357604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290611911908890889087908790600401612746565b6020604051808303816000875af192505050801561194c575060408051601f3d908101601f1916820190925261194991810190612783565b60015b6119b5573d80801561197a576040519150601f19603f3d011682016040523d82523d6000602084013e61197f565b606091505b5080516000036119ad57604051633250574960e11b81526001600160a01b03851660048201526024016106ec565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b146119f157604051633250574960e11b81526001600160a01b03851660048201526024016106ec565b505b5050505050565b6060611a05826115de565b5060008281526006602052604081208054611a1f90612562565b80601f0160208091040260200160405190810160405280929190818152602001828054611a4b90612562565b8015611a985780601f10611a6d57610100808354040283529160200191611a98565b820191906000526020600020905b815481529060010190602001808311611a7b57829003601f168201915b505050505090506000611ab660408051602081019091526000815290565b90508051600003611ac8575092915050565b815115611afa578082604051602001611ae29291906127a0565b60405160208183030381529060405292505050919050565b611b0384611cdd565b949350505050565b60006001600160e01b031982166380ac58cd60e01b1480611b3c57506001600160e01b03198216635b5e139f60e01b145b806105f657506301ffc9a760e01b6001600160e01b03198316146105f6565b8080611b6f57506001600160a01b03821615155b15611c31576000611b7f846115de565b90506001600160a01b03831615801590611bab5750826001600160a01b0316816001600160a01b031614155b8015611bbe5750611bbc81846113f5565b155b15611be75760405163a9fbf51f60e01b81526001600160a01b03841660048201526024016106ec565b8115611c2f5783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b611c6c838383611d52565b610a18576001600160a01b038316611c9a57604051637e27328960e01b8152600481018290526024016106ec565b60405163177e802f60e01b81526001600160a01b0383166004820152602481018290526044016106ec565b611ccf8383611db5565b610a183360008585856118cf565b6060611ce8826115de565b506000611d0060408051602081019091526000815290565b90506000815111611d205760405180602001604052806000815250611d4b565b80611d2a84611e1a565b604051602001611d3b9291906127a0565b6040516020818303038152906040525b9392505050565b60006001600160a01b03831615801590611b035750826001600160a01b0316846001600160a01b03161480611d8c5750611d8c84846113f5565b80611b035750506000908152600460205260409020546001600160a01b03908116911614919050565b6001600160a01b038216611ddf57604051633250574960e11b8152600060048201526024016106ec565b6000611ded83836000611624565b90506001600160a01b03811615610a18576040516339e3563760e11b8152600060048201526024016106ec565b60606000611e2783611ead565b600101905060008167ffffffffffffffff811115611e4757611e476120fa565b6040519080825280601f01601f191660200182016040528015611e71576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084611e7b57509392505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310611eec5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611f18576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310611f3657662386f26fc10000830492506010015b6305f5e1008310611f4e576305f5e100830492506008015b6127108310611f6257612710830492506004015b60648310611f74576064830492506002015b600a83106105f65760010192915050565b6001600160e01b03198116811461145e57600080fd5b600060208284031215611fad57600080fd5b8135611d4b81611f85565b60005b83811015611fd3578181015183820152602001611fbb565b50506000910152565b60008151808452611ff4816020860160208601611fb8565b601f01601f19169290920160200192915050565b602081526000611d4b6020830184611fdc565b60006020828403121561202d57600080fd5b5035919050565b80356001600160a01b038116811461204b57600080fd5b919050565b6000806040838503121561206357600080fd5b61206c83612034565b946020939093013593505050565b60008060006060848603121561208f57600080fd5b61209884612034565b92506120a660208501612034565b9150604084013590509250925092565b6020808252825182820181905260009190848201906040850190845b818110156120ee578351835292840192918401916001016120d2565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715612139576121396120fa565b604052919050565b600067ffffffffffffffff83111561215b5761215b6120fa565b61216e601f8401601f1916602001612110565b905082815283838301111561218257600080fd5b828260208301376000602084830101529392505050565b600082601f8301126121aa57600080fd5b611d4b83833560208501612141565b6000806000606084860312156121ce57600080fd5b833567ffffffffffffffff808211156121e657600080fd5b6121f287838801612199565b9450602086013591508082111561220857600080fd5b5061221586828701612199565b925050604084013590509250925092565b60008060006060848603121561223b57600080fd5b61224484612034565b925060208401359150604084013567ffffffffffffffff81111561226757600080fd5b61227386828701612199565b9150509250925092565b602081526000825160e0602084015261229a610100840182611fdc565b90506020840151601f198483030160408501526122b78282611fdc565b91505060018060a01b03604085015116606084015260608401516080840152608084015160a084015260a084015160c084015260c0840151151560e08401528091505092915050565b60006020828403121561231257600080fd5b611d4b82612034565b6000806040838503121561232e57600080fd5b50508035926020909101359150565b60008060006060848603121561235257600080fd5b61235b84612034565b92506020808501359250604085013567ffffffffffffffff8082111561238057600080fd5b818701915087601f83011261239457600080fd5b8135818111156123a6576123a66120fa565b8060051b6123b5858201612110565b918252838101850191858101908b8411156123cf57600080fd5b86860192505b8383101561240b578235858111156123ed5760008081fd5b6123fb8d89838a0101612199565b83525091860191908601906123d5565b809750505050505050509250925092565b6000806040838503121561242f57600080fd5b61243883612034565b91506020830135801515811461244d57600080fd5b809150509250929050565b6000806000806080858703121561246e57600080fd5b61247785612034565b935061248560208601612034565b925060408501359150606085013567ffffffffffffffff8111156124a857600080fd5b8501601f810187136124b957600080fd5b6124c887823560208401612141565b91505092959194509250565b600080604083850312156124e757600080fd5b6124f083612034565b91506124fe60208401612034565b90509250929050565b60e08152600061251a60e083018a611fdc565b828103602084015261252c818a611fdc565b6001600160a01b0398909816604084015250506060810194909452608084019290925260a0830152151560c09091015292915050565b600181811c9082168061257657607f821691505b60208210810361259657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000600182016125c4576125c461259c565b5060010190565b601f821115610a1857600081815260208120601f850160051c810160208610156125f25750805b601f850160051c820191505b818110156119f1578281556001016125fe565b815167ffffffffffffffff81111561262b5761262b6120fa565b61263f816126398454612562565b846125cb565b602080601f831160018114612674576000841561265c5750858301515b600019600386901b1c1916600185901b1785556119f1565b600085815260208120601f198616915b828110156126a357888601518255948401946001909101908401612684565b50858210156126c15787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6040815260006126e46040830185611fdc565b90508260208301529392505050565b818103818111156105f6576105f661259c565b80820281158282048414176105f6576105f661259c565b808201808211156105f6576105f661259c565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061277990830184611fdc565b9695505050505050565b60006020828403121561279557600080fd5b8151611d4b81611f85565b600083516127b2818460208801611fb8565b8351908301906127c6818360208801611fb8565b0194935050505056fea264697066735822122090cf386d6ab6d2df5c5e801c84125f6a9b5a75903a548c54441eca449550568464736f6c63430008140033";

type NFTArtistCollectionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTArtistCollectionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTArtistCollection__factory extends ContractFactory {
  constructor(...args: NFTArtistCollectionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      NFTArtistCollection & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): NFTArtistCollection__factory {
    return super.connect(runner) as NFTArtistCollection__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTArtistCollectionInterface {
    return new Interface(_abi) as NFTArtistCollectionInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): NFTArtistCollection {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as NFTArtistCollection;
  }
}
